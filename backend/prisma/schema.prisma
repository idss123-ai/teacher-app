// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String    @id @default(cuid())
  firstName             String
  lastName              String
  email                 String    @unique
  password              String
  role                  Role      @default(USER)
  subscription          Subscription?
  savedPrompts          SavedPrompt[]
  idssAccessRequests    IDSSAccessRequest[]
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  emailVerified         Boolean   @default(false)
  stripeCustomerId      String?
  subscriptionExpiresAt DateTime?
}

model Subscription {
  id                   String   @id @default(cuid())
  userId               String   @unique
  user                 User     @relation(fields: [userId], references: [id])
  plan                 Plan     @default(FREE)
  status               Status   @default(ACTIVE)
  stripeSubscriptionId String?
  currentPeriodEnd     DateTime?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model SavedPrompt {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  title     String
  prompt    String
  response  String
  category  String
  createdAt DateTime @default(now())
}

model IDSSAccessRequest {
  id         String       @id @default(cuid())
  userId     String       @unique
  user       User         @relation(fields: [userId], references: [id])
  status     IDSSStatus   @default(PENDING)
  approvedBy String?
  approvedAt DateTime?
  createdAt  DateTime     @default(now())
}

enum Role {
  USER
  IDSS_TEACHER
  ADMIN
}

enum Plan {
  FREE
  TEACHER
  MASTER
}

enum Status {
  ACTIVE
  CANCELLED
  EXPIRED
}

enum IDSSStatus {
  PENDING
  APPROVED
  REJECTED
}
